{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/spotify_mtv/client/src/App.tsx\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport Video from \"./util/Video\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiResponse: \"\"\n    };\n  }\n\n  testApi() {\n    const url = \"http://localhost:9000/testApi\";\n    fetch(url).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  } // componentWillMount() {\n  //   this.testApi();\n  // }\n\n\n  render() {\n    const testVideos = [new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"), new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\")];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Main, {\n      title: \"Recently Played\",\n      videos: [],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/spotify_mtv/client/src/App.tsx"],"names":["React","Component","Main","Video","App","state","apiResponse","testApi","url","fetch","then","res","text","setState","render","testVideos","Date"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAMA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA0C;AAAA;AAAA;AAAA,SACvDI,KADuD,GACrC;AAChBC,MAAAA,WAAW,EAAE;AADG,KADqC;AAAA;;AAKvDC,EAAAA,OAAO,GAAG;AACR,UAAMC,GAAG,GAAG,+BAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS,KAAKE,QAAL,CAAc;AAAEP,MAAAA,WAAW,EAAEK;AAAf,KAAd,CAFjB;AAGD,GAVsD,CAYvD;AACA;AACA;;;AAEAG,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,CACjB,IAAIZ,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CADiB,EAEjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CAFiB,EAGjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CAHiB,EAIjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CAJiB,EAKjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CALiB,EAMjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CANiB,EAOjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CAPiB,EAQjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CARiB,EASjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CATiB,EAUjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CAViB,EAWjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CAXiB,EAYjB,IAAIb,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,IAAIa,IAAJ,EAA5B,EAAwC,GAAxC,CAZiB,CAAnB;AAcA,wBACE,uDACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,iBAAZ;AAA8B,MAAA,MAAM,EAAE,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AApCsD","sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\nimport \"./App.css\";\n\nimport Main from \"./components/Main\";\nimport Video from \"./util/Video\";\n\ntype AppState = {\n  apiResponse: string;\n};\n\nexport default class App extends Component<{}, AppState> {\n  state: AppState = {\n    apiResponse: \"\",\n  };\n\n  testApi() {\n    const url = \"http://localhost:9000/testApi\";\n    fetch(url)\n      .then((res) => res.text())\n      .then((res) => this.setState({ apiResponse: res }));\n  }\n\n  // componentWillMount() {\n  //   this.testApi();\n  // }\n\n  render() {\n    const testVideos = [\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n      new Video(\"1\", \"1\", \"1\", 1, new Date(), \"1\"),\n    ];\n    return (\n      <>\n        <Main title=\"Recently Played\" videos={[]} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}