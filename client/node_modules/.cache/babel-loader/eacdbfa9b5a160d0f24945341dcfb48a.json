{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/spotify_mtv/client/src/App.tsx\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiResponse: \"\"\n    };\n  }\n\n  testApi() {\n    const url = \"http://localhost:9000/testApi\";\n    fetch(url).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentWillMount() {\n    this.testApi();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, this.state.apiResponse);\n  }\n\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/spotify_mtv/client/src/App.tsx"],"names":["React","Component","App","state","apiResponse","testApi","url","fetch","then","res","text","setState","componentWillMount","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,WAAP;AAQA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA0C;AAAA;AAAA;AAAA,SACvDE,KADuD,GACrC;AAChBC,MAAAA,WAAW,EAAE;AADG,KADqC;AAAA;;AAKvDC,EAAAA,OAAO,GAAG;AACR,UAAMC,GAAG,GAAG,+BAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS,KAAKE,QAAL,CAAc;AAAEP,MAAAA,WAAW,EAAEK;AAAf,KAAd,CAFjB;AAGD;;AAEDG,EAAAA,kBAAkB,GAAG;AACnB,SAAKP,OAAL;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWC,WAAhB,CAAP;AACD;;AAlBsD","sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\nimport \"./App.css\";\n\nimport Main from \"./components/Main\";\n\ntype AppState = {\n  apiResponse: string;\n};\n\nexport default class App extends Component<{}, AppState> {\n  state: AppState = {\n    apiResponse: \"\",\n  };\n\n  testApi() {\n    const url = \"http://localhost:9000/testApi\";\n    fetch(url)\n      .then((res) => res.text())\n      .then((res) => this.setState({ apiResponse: res }));\n  }\n\n  componentWillMount() {\n    this.testApi();\n  }\n\n  render() {\n    return <h1>{this.state.apiResponse}</h1>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}