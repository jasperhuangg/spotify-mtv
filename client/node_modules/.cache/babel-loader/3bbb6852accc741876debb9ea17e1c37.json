{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/spotify_mtv/client/src/App.tsx\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport animateScrollTo from \"animated-scroll-to\";\nimport Main from \"./components/Main\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport Sidebar from \"./components/Sidebar\";\nimport OverlayShadow from \"./components/OverlayShadow\";\nimport MusicVideo from \"./util/MusicVideo\";\nimport URLParser from \"./util/URLParser\";\nimport \"./stylesheets/Fonts.css\";\nimport \"./stylesheets/App.css\";\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayName: \"\",\n      currentScreen: \"Home\",\n      loggedIn: false,\n      accessToken: \"\",\n      recentlyPlayed: [],\n      playlists: {},\n      sidebarShowing: false\n    };\n  }\n\n  componentDidMount() {\n    /**\n     * ----------------------------------------------Authorization Flow----------------------------------------------\n     */\n    const cookies = new Cookies(); // if we were redirected from /callback (obtained an accessToken)\n\n    if (cookies.get(\"spotifyMTVAccessToken\") !== undefined) {\n      this.setState({\n        accessToken: cookies.get(\"spotifyMTVAccessToken\")\n      });\n      const url = \"http://localhost:9000/mtvApi/getDisplayName?accessToken=\" + cookies.get(\"spotifyMTVAccessToken\");\n      fetch(url).then(res => res.text()).then(res => this.setState({\n        displayName: res\n      })); // remove it from the cookies (later will hash cookie name instead of deleting it so other sites can't retrieve it)\n\n      cookies.remove(\"spotifyMTVAccessToken\");\n    } else {\n      // obtain the authorization code from the URL (after calling /login)\n      const url = window.location.href;\n      const authCode = URLParser(url, \"code=\");\n\n      if (authCode !== \"\") {\n        const url = domain + \"/mtvApi/callback?code=\" + authCode;\n        fetch(url).then(authInfo => authInfo.json()).then(authInfo => {\n          cookies.set(\"spotifyMTVAccessToken\", authInfo.accessToken);\n          window.location.href = \"/\"; // this will reload the page again\n        });\n      }\n    }\n    /**\n     * ---------------------------------------------------------------------------------------------------------------\n     */\n\n  }\n  /**\n   * Calls the login endpoint to obtain an authorization URL (which will return an auth code).\n   */\n\n\n  login() {\n    const url = domain + \"/mtvApi/login\";\n    fetch(url).then(authURL => authURL.text()).then(authURL => window.location.href = authURL);\n  }\n  /**\n   * Gets the user's Spotify display name.\n   */\n\n\n  getDisplayName() {\n    const url = domain + \"/mtvApi/getDisplayName?accessToken=\" + this.state.accessToken;\n    fetch(url).then(res => res.text()).then(res => this.setState({\n      displayName: res\n    }));\n  }\n  /**\n   * Gets an array of music videos for the user's recently played tracks on Spotify.\n   */\n\n\n  getRecentlyPlayed() {\n    const url = domain + \"/mtvApi/getRecentlyPlayed?accessToken=\" + this.state.accessToken;\n    fetch(url).then(res => res.json()).then(res => this.setState({\n      recentlyPlayed: res\n    }));\n  }\n  /**\n   * Gets a dictionary of ```[id]: Playlist``` for each of the user's public playlists on Spotify.\n   */\n\n\n  getPlaylists() {\n    const url = domain + \"/mtvApi/getPlaylists?accessToken=\" + this.state.accessToken;\n    fetch(url).then(res => res.json()).then(res => this.setState({\n      playlists: res\n    }));\n  }\n  /**\n   * Gets all of the music videos and updates state for playlist with ```id```.\n   */\n\n\n  getPlaylistVideos(id) {\n    const url = domain + \"/mtvApi/getPlaylistVideos\";\n    var playlists = {};\n    Object.assign(playlists, this.state.playlists);\n    var tracks = playlists[id].tracks;\n    const body = {\n      tracks: tracks\n    };\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json()).then(res => {\n      // update the playlist's music videos in state\n      playlists[id].musicVideos = res;\n      this.setState({\n        playlists: playlists\n      });\n    });\n  }\n  /**\n   * Handles showing/hiding the sidebar.\n   */\n\n\n  toggleSidebar() {\n    this.setState({\n      sidebarShowing: !this.state.sidebarShowing\n    });\n  }\n  /**\n   * Handles selecting a sidebar item.\n   */\n\n\n  selectSidebarItem(title, type) {\n    this.setState({\n      currentScreen: title\n    });\n    setTimeout(() => {\n      this.setState({\n        sidebarShowing: false\n      });\n      animateScrollTo([0, 0], {\n        maxDuration: 400\n      });\n    }, 150);\n  }\n\n  render() {\n    var testVideos = [new MusicVideo(\"futsal-shuffle.img\", \"Futsal Shuffle\", \"Lil Uzi Vert\", \"Eternal Atake\", \"\"), new MusicVideo(\"no-photos.img\", \"No Photos\", \"Don Toliver\", \"Heaven or Hell\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"RENT FREE\", \"Russ\", \"RENT FREE\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"QUARANTINE CLEAN\", \"Turbo, Gunna, Young Thug\", \"QUARANTINE CLEAN\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Bored In The House\", \"Tyga, Curtis Roach\", \"Bored In The House\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"@ MEH\", \"Playboi Carti\", \"@ MEH\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"ALASKA\", \"BROCKHAMPTON\", \"SATURATION III\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Jersey\", \"Future\", \"What A Time To Be Alive\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"All Bad\", \"Future, Lil Uzi Vert\", \"High Off Life\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Futsal Shuffle\", \"Lil Uzi Vert\", \"Eternal Atake\", \"\"), new MusicVideo(\"no-photos.img\", \"No Photos\", \"Don Toliver\", \"Heaven or Hell\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"RENT FREE\", \"Russ\", \"RENT FREE\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"QUARANTINE CLEAN\", \"Turbo, Gunna, Young Thug\", \"QUARANTINE CLEAN\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Bored In The House\", \"Tyga, Curtis Roach\", \"Bored In The House\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"@ MEH\", \"Playboi Carti\", \"@ MEH\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"ALASKA\", \"BROCKHAMPTON\", \"SATURATION III\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Jersey\", \"Future\", \"What A Time To Be Alive\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"All Bad\", \"Future, Lil Uzi Vert\", \"High Off Life\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Futsal Shuffle\", \"Lil Uzi Vert\", \"Eternal Atake\", \"\"), new MusicVideo(\"no-photos.img\", \"No Photos\", \"Don Toliver\", \"Heaven or Hell\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"RENT FREE\", \"Russ\", \"RENT FREE\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"QUARANTINE CLEAN\", \"Turbo, Gunna, Young Thug\", \"QUARANTINE CLEAN\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Bored In The House\", \"Tyga, Curtis Roach\", \"Bored In The House\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"@ MEH\", \"Playboi Carti\", \"@ MEH\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"ALASKA\", \"BROCKHAMPTON\", \"SATURATION III\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Jersey\", \"Future\", \"What A Time To Be Alive\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"All Bad\", \"Future, Lil Uzi Vert\", \"High Off Life\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Futsal Shuffle\", \"Lil Uzi Vert\", \"Eternal Atake\", \"\"), new MusicVideo(\"no-photos.img\", \"No Photos\", \"Don Toliver\", \"Heaven or Hell\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"RENT FREE\", \"Russ\", \"RENT FREE\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"QUARANTINE CLEAN\", \"Turbo, Gunna, Young Thug\", \"QUARANTINE CLEAN\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Bored In The House\", \"Tyga, Curtis Roach\", \"Bored In The House\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"@ MEH\", \"Playboi Carti\", \"@ MEH\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"ALASKA\", \"BROCKHAMPTON\", \"SATURATION III\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Jersey\", \"Future\", \"What A Time To Be Alive\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"All Bad\", \"Future, Lil Uzi Vert\", \"High Off Life\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Futsal Shuffle\", \"Lil Uzi Vert\", \"Eternal Atake\", \"\"), new MusicVideo(\"no-photos.img\", \"No Photos\", \"Don Toliver\", \"Heaven or Hell\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"RENT FREE\", \"Russ\", \"RENT FREE\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"QUARANTINE CLEAN\", \"Turbo, Gunna, Young Thug\", \"QUARANTINE CLEAN\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Bored In The House\", \"Tyga, Curtis Roach\", \"Bored In The House\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"@ MEH\", \"Playboi Carti\", \"@ MEH\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"ALASKA\", \"BROCKHAMPTON\", \"SATURATION III\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Jersey\", \"Future\", \"What A Time To Be Alive\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"All Bad\", \"Future, Lil Uzi Vert\", \"High Off Life\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Futsal Shuffle\", \"Lil Uzi Vert\", \"Eternal Atake\", \"\"), new MusicVideo(\"no-photos.img\", \"No Photos\", \"Don Toliver\", \"Heaven or Hell\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"RENT FREE\", \"Russ\", \"RENT FREE\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"QUARANTINE CLEAN\", \"Turbo, Gunna, Young Thug\", \"QUARANTINE CLEAN\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Bored In The House\", \"Tyga, Curtis Roach\", \"Bored In The House\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"@ MEH\", \"Playboi Carti\", \"@ MEH\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"ALASKA\", \"BROCKHAMPTON\", \"SATURATION III\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Jersey\", \"Future\", \"What A Time To Be Alive\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"All Bad\", \"Future, Lil Uzi Vert\", \"High Off Life\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Futsal Shuffle\", \"Lil Uzi Vert\", \"Eternal Atake\", \"\"), new MusicVideo(\"no-photos.img\", \"No Photos\", \"Don Toliver\", \"Heaven or Hell\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"RENT FREE\", \"Russ\", \"RENT FREE\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"QUARANTINE CLEAN\", \"Turbo, Gunna, Young Thug\", \"QUARANTINE CLEAN\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Bored In The House\", \"Tyga, Curtis Roach\", \"Bored In The House\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"@ MEH\", \"Playboi Carti\", \"@ MEH\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"ALASKA\", \"BROCKHAMPTON\", \"SATURATION III\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"Jersey\", \"Future\", \"What A Time To Be Alive\", \"\"), new MusicVideo(\"futsal-shuffle.img\", \"All Bad\", \"Future, Lil Uzi Vert\", \"High Off Life\", \"\")]; // user has logged in, show the app\n\n    if (this.state.accessToken.length) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"test-buttons\",\n      className: \"text-center m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn spotify-button-green\",\n      onClick: () => this.getPlaylistVideos(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 15\n      }\n    }, \"GET TOP ARTISTS\")), /*#__PURE__*/React.createElement(Navbar, {\n      videos: testVideos,\n      toggleSidebar: () => this.toggleSidebar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Sidebar, {\n      currentScreen: this.state.currentScreen,\n      playlists: this.state.playlists,\n      displaying: this.state.sidebarShowing,\n      selectSidebarItem: (title, type) => this.selectSidebarItem(title, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(OverlayShadow, {\n      displaying: this.state.sidebarShowing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      title: this.state.currentScreen,\n      videos: testVideos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 13\n      }\n    }))); // show the login screen\n    else return /*#__PURE__*/React.createElement(Login, {\n        login: () => this.login(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 17\n        }\n      });\n  }\n\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/spotify_mtv/client/src/App.tsx"],"names":["React","Component","Cookies","animateScrollTo","Main","Navbar","Login","Sidebar","OverlayShadow","MusicVideo","URLParser","domain","App","state","displayName","currentScreen","loggedIn","accessToken","recentlyPlayed","playlists","sidebarShowing","componentDidMount","cookies","get","undefined","setState","url","fetch","then","res","text","remove","window","location","href","authCode","authInfo","json","set","login","authURL","getDisplayName","getRecentlyPlayed","getPlaylists","getPlaylistVideos","id","Object","assign","tracks","body","method","headers","JSON","stringify","musicVideos","toggleSidebar","selectSidebarItem","title","type","setTimeout","maxDuration","render","testVideos","length"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAGA,OAAO,yBAAP;AACA,OAAO,uBAAP;AAEA,MAAMC,MAAM,GAAG,uBAAf;AAYA,eAAe,MAAMC,GAAN,SAAkBX,SAAlB,CAA0C;AAAA;AAAA;AAAA,SACvDY,KADuD,GACrC;AAChBC,MAAAA,WAAW,EAAE,EADG;AAEhBC,MAAAA,aAAa,EAAE,MAFC;AAGhBC,MAAAA,QAAQ,EAAE,KAHM;AAIhBC,MAAAA,WAAW,EAAE,EAJG;AAKhBC,MAAAA,cAAc,EAAE,EALA;AAMhBC,MAAAA,SAAS,EAAE,EANK;AAOhBC,MAAAA,cAAc,EAAE;AAPA,KADqC;AAAA;;AAWvDC,EAAAA,iBAAiB,GAAG;AAClB;;;AAGA,UAAMC,OAAO,GAAG,IAAIpB,OAAJ,EAAhB,CAJkB,CAKlB;;AACA,QAAIoB,OAAO,CAACC,GAAR,CAAY,uBAAZ,MAAyCC,SAA7C,EAAwD;AACtD,WAAKC,QAAL,CAAc;AACZR,QAAAA,WAAW,EAAEK,OAAO,CAACC,GAAR,CAAY,uBAAZ;AADD,OAAd;AAGA,YAAMG,GAAG,GACP,6DACAJ,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAFF;AAIAI,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS,KAAKJ,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEe;AAAf,OAAd,CAFjB,EARsD,CAWtD;;AACAP,MAAAA,OAAO,CAACS,MAAR,CAAe,uBAAf;AACD,KAbD,MAaO;AACL;AACA,YAAML,GAAG,GAAGM,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,YAAMC,QAAQ,GAAGzB,SAAS,CAACgB,GAAD,EAAM,OAAN,CAA1B;;AAEA,UAAIS,QAAQ,KAAK,EAAjB,EAAqB;AACnB,cAAMT,GAAG,GAAGf,MAAM,GAAG,wBAAT,GAAoCwB,QAAhD;AACAR,QAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSQ,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGT,IAFH,CAESQ,QAAD,IAAc;AAClBd,UAAAA,OAAO,CAACgB,GAAR,CAAY,uBAAZ,EAAqCF,QAAQ,CAACnB,WAA9C;AACAe,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB,CAFkB,CAEU;AAC7B,SALH;AAMD;AACF;AACD;;;;AAGD;AAED;;;;;AAGAK,EAAAA,KAAK,GAAG;AACN,UAAMb,GAAG,GAAGf,MAAM,GAAG,eAArB;AACAgB,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSY,OAAD,IAAaA,OAAO,CAACV,IAAR,EADrB,EAEGF,IAFH,CAESY,OAAD,IAAcR,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBM,OAF7C;AAGD;AAED;;;;;AAGAC,EAAAA,cAAc,GAAG;AACf,UAAMf,GAAG,GACPf,MAAM,GAAG,qCAAT,GAAiD,KAAKE,KAAL,CAAWI,WAD9D;AAEAU,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS,KAAKJ,QAAL,CAAc;AAAEX,MAAAA,WAAW,EAAEe;AAAf,KAAd,CAFjB;AAGD;AAED;;;;;AAGAa,EAAAA,iBAAiB,GAAG;AAClB,UAAMhB,GAAG,GACPf,MAAM,GACN,wCADA,GAEA,KAAKE,KAAL,CAAWI,WAHb;AAIAU,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACQ,IAAJ,EADjB,EAEGT,IAFH,CAESC,GAAD,IAAS,KAAKJ,QAAL,CAAc;AAAEP,MAAAA,cAAc,EAAEW;AAAlB,KAAd,CAFjB;AAGD;AAED;;;;;AAGAc,EAAAA,YAAY,GAAG;AACb,UAAMjB,GAAG,GACPf,MAAM,GAAG,mCAAT,GAA+C,KAAKE,KAAL,CAAWI,WAD5D;AAEAU,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACQ,IAAJ,EADjB,EAEGT,IAFH,CAESC,GAAD,IAAS,KAAKJ,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAEU;AAAb,KAAd,CAFjB;AAGD;AAED;;;;;AAGAe,EAAAA,iBAAiB,CAACC,EAAD,EAAa;AAC5B,UAAMnB,GAAG,GAAGf,MAAM,GAAG,2BAArB;AAEA,QAAIQ,SAAqC,GAAG,EAA5C;AACA2B,IAAAA,MAAM,CAACC,MAAP,CAAc5B,SAAd,EAAyB,KAAKN,KAAL,CAAWM,SAApC;AACA,QAAI6B,MAAM,GAAG7B,SAAS,CAAC0B,EAAD,CAAT,CAAcG,MAA3B;AAEA,UAAMC,IAAI,GAAG;AACXD,MAAAA,MAAM,EAAEA;AADG,KAAb;AAIArB,IAAAA,KAAK,CAACD,GAAD,EAAM;AACTwB,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFA;AAKTF,MAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AALG,KAAN,CAAL,CAOGrB,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACQ,IAAJ,EAPjB,EAQGT,IARH,CAQSC,GAAD,IAAS;AACb;AACAV,MAAAA,SAAS,CAAC0B,EAAD,CAAT,CAAcS,WAAd,GAA4BzB,GAA5B;AACA,WAAKJ,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAEA;AADC,OAAd;AAGD,KAdH;AAeD;AAED;;;;;AAGAoC,EAAAA,aAAa,GAAG;AACd,SAAK9B,QAAL,CAAc;AAAEL,MAAAA,cAAc,EAAE,CAAC,KAAKP,KAAL,CAAWO;AAA9B,KAAd;AACD;AAED;;;;;AAGAoC,EAAAA,iBAAiB,CAACC,KAAD,EAAgBC,IAAhB,EAA8B;AAC7C,SAAKjC,QAAL,CAAc;AAAEV,MAAAA,aAAa,EAAE0C;AAAjB,KAAd;AACAE,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKlC,QAAL,CAAc;AAAEL,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACAjB,MAAAA,eAAe,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS;AACtByD,QAAAA,WAAW,EAAE;AADS,OAAT,CAAf;AAGD,KALS,EAKP,GALO,CAAV;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAG,CACf,IAAIrD,UAAJ,CACE,oBADF,EAEE,gBAFF,EAGE,cAHF,EAIE,eAJF,EAKE,EALF,CADe,EAQf,IAAIA,UAAJ,CACE,eADF,EAEE,WAFF,EAGE,aAHF,EAIE,gBAJF,EAKE,EALF,CARe,EAef,IAAIA,UAAJ,CACE,oBADF,EAEE,WAFF,EAGE,MAHF,EAIE,WAJF,EAKE,EALF,CAfe,EAsBf,IAAIA,UAAJ,CACE,oBADF,EAEE,kBAFF,EAGE,0BAHF,EAIE,kBAJF,EAKE,EALF,CAtBe,EA6Bf,IAAIA,UAAJ,CACE,oBADF,EAEE,oBAFF,EAGE,oBAHF,EAIE,oBAJF,EAKE,EALF,CA7Be,EAoCf,IAAIA,UAAJ,CACE,oBADF,EAEE,OAFF,EAGE,eAHF,EAIE,OAJF,EAKE,EALF,CApCe,EA2Cf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,cAHF,EAIE,gBAJF,EAKE,EALF,CA3Ce,EAkDf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,QAHF,EAIE,yBAJF,EAKE,EALF,CAlDe,EAyDf,IAAIA,UAAJ,CACE,oBADF,EAEE,SAFF,EAGE,sBAHF,EAIE,eAJF,EAKE,EALF,CAzDe,EAgEf,IAAIA,UAAJ,CACE,oBADF,EAEE,gBAFF,EAGE,cAHF,EAIE,eAJF,EAKE,EALF,CAhEe,EAuEf,IAAIA,UAAJ,CACE,eADF,EAEE,WAFF,EAGE,aAHF,EAIE,gBAJF,EAKE,EALF,CAvEe,EA8Ef,IAAIA,UAAJ,CACE,oBADF,EAEE,WAFF,EAGE,MAHF,EAIE,WAJF,EAKE,EALF,CA9Ee,EAqFf,IAAIA,UAAJ,CACE,oBADF,EAEE,kBAFF,EAGE,0BAHF,EAIE,kBAJF,EAKE,EALF,CArFe,EA4Ff,IAAIA,UAAJ,CACE,oBADF,EAEE,oBAFF,EAGE,oBAHF,EAIE,oBAJF,EAKE,EALF,CA5Fe,EAmGf,IAAIA,UAAJ,CACE,oBADF,EAEE,OAFF,EAGE,eAHF,EAIE,OAJF,EAKE,EALF,CAnGe,EA0Gf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,cAHF,EAIE,gBAJF,EAKE,EALF,CA1Ge,EAiHf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,QAHF,EAIE,yBAJF,EAKE,EALF,CAjHe,EAwHf,IAAIA,UAAJ,CACE,oBADF,EAEE,SAFF,EAGE,sBAHF,EAIE,eAJF,EAKE,EALF,CAxHe,EA+Hf,IAAIA,UAAJ,CACE,oBADF,EAEE,gBAFF,EAGE,cAHF,EAIE,eAJF,EAKE,EALF,CA/He,EAsIf,IAAIA,UAAJ,CACE,eADF,EAEE,WAFF,EAGE,aAHF,EAIE,gBAJF,EAKE,EALF,CAtIe,EA6If,IAAIA,UAAJ,CACE,oBADF,EAEE,WAFF,EAGE,MAHF,EAIE,WAJF,EAKE,EALF,CA7Ie,EAoJf,IAAIA,UAAJ,CACE,oBADF,EAEE,kBAFF,EAGE,0BAHF,EAIE,kBAJF,EAKE,EALF,CApJe,EA2Jf,IAAIA,UAAJ,CACE,oBADF,EAEE,oBAFF,EAGE,oBAHF,EAIE,oBAJF,EAKE,EALF,CA3Je,EAkKf,IAAIA,UAAJ,CACE,oBADF,EAEE,OAFF,EAGE,eAHF,EAIE,OAJF,EAKE,EALF,CAlKe,EAyKf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,cAHF,EAIE,gBAJF,EAKE,EALF,CAzKe,EAgLf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,QAHF,EAIE,yBAJF,EAKE,EALF,CAhLe,EAuLf,IAAIA,UAAJ,CACE,oBADF,EAEE,SAFF,EAGE,sBAHF,EAIE,eAJF,EAKE,EALF,CAvLe,EA8Lf,IAAIA,UAAJ,CACE,oBADF,EAEE,gBAFF,EAGE,cAHF,EAIE,eAJF,EAKE,EALF,CA9Le,EAqMf,IAAIA,UAAJ,CACE,eADF,EAEE,WAFF,EAGE,aAHF,EAIE,gBAJF,EAKE,EALF,CArMe,EA4Mf,IAAIA,UAAJ,CACE,oBADF,EAEE,WAFF,EAGE,MAHF,EAIE,WAJF,EAKE,EALF,CA5Me,EAmNf,IAAIA,UAAJ,CACE,oBADF,EAEE,kBAFF,EAGE,0BAHF,EAIE,kBAJF,EAKE,EALF,CAnNe,EA0Nf,IAAIA,UAAJ,CACE,oBADF,EAEE,oBAFF,EAGE,oBAHF,EAIE,oBAJF,EAKE,EALF,CA1Ne,EAiOf,IAAIA,UAAJ,CACE,oBADF,EAEE,OAFF,EAGE,eAHF,EAIE,OAJF,EAKE,EALF,CAjOe,EAwOf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,cAHF,EAIE,gBAJF,EAKE,EALF,CAxOe,EA+Of,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,QAHF,EAIE,yBAJF,EAKE,EALF,CA/Oe,EAsPf,IAAIA,UAAJ,CACE,oBADF,EAEE,SAFF,EAGE,sBAHF,EAIE,eAJF,EAKE,EALF,CAtPe,EA6Pf,IAAIA,UAAJ,CACE,oBADF,EAEE,gBAFF,EAGE,cAHF,EAIE,eAJF,EAKE,EALF,CA7Pe,EAoQf,IAAIA,UAAJ,CACE,eADF,EAEE,WAFF,EAGE,aAHF,EAIE,gBAJF,EAKE,EALF,CApQe,EA2Qf,IAAIA,UAAJ,CACE,oBADF,EAEE,WAFF,EAGE,MAHF,EAIE,WAJF,EAKE,EALF,CA3Qe,EAkRf,IAAIA,UAAJ,CACE,oBADF,EAEE,kBAFF,EAGE,0BAHF,EAIE,kBAJF,EAKE,EALF,CAlRe,EAyRf,IAAIA,UAAJ,CACE,oBADF,EAEE,oBAFF,EAGE,oBAHF,EAIE,oBAJF,EAKE,EALF,CAzRe,EAgSf,IAAIA,UAAJ,CACE,oBADF,EAEE,OAFF,EAGE,eAHF,EAIE,OAJF,EAKE,EALF,CAhSe,EAuSf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,cAHF,EAIE,gBAJF,EAKE,EALF,CAvSe,EA8Sf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,QAHF,EAIE,yBAJF,EAKE,EALF,CA9Se,EAqTf,IAAIA,UAAJ,CACE,oBADF,EAEE,SAFF,EAGE,sBAHF,EAIE,eAJF,EAKE,EALF,CArTe,EA4Tf,IAAIA,UAAJ,CACE,oBADF,EAEE,gBAFF,EAGE,cAHF,EAIE,eAJF,EAKE,EALF,CA5Te,EAmUf,IAAIA,UAAJ,CACE,eADF,EAEE,WAFF,EAGE,aAHF,EAIE,gBAJF,EAKE,EALF,CAnUe,EA0Uf,IAAIA,UAAJ,CACE,oBADF,EAEE,WAFF,EAGE,MAHF,EAIE,WAJF,EAKE,EALF,CA1Ue,EAiVf,IAAIA,UAAJ,CACE,oBADF,EAEE,kBAFF,EAGE,0BAHF,EAIE,kBAJF,EAKE,EALF,CAjVe,EAwVf,IAAIA,UAAJ,CACE,oBADF,EAEE,oBAFF,EAGE,oBAHF,EAIE,oBAJF,EAKE,EALF,CAxVe,EA+Vf,IAAIA,UAAJ,CACE,oBADF,EAEE,OAFF,EAGE,eAHF,EAIE,OAJF,EAKE,EALF,CA/Ve,EAsWf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,cAHF,EAIE,gBAJF,EAKE,EALF,CAtWe,EA6Wf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,QAHF,EAIE,yBAJF,EAKE,EALF,CA7We,EAoXf,IAAIA,UAAJ,CACE,oBADF,EAEE,SAFF,EAGE,sBAHF,EAIE,eAJF,EAKE,EALF,CApXe,EA2Xf,IAAIA,UAAJ,CACE,oBADF,EAEE,gBAFF,EAGE,cAHF,EAIE,eAJF,EAKE,EALF,CA3Xe,EAkYf,IAAIA,UAAJ,CACE,eADF,EAEE,WAFF,EAGE,aAHF,EAIE,gBAJF,EAKE,EALF,CAlYe,EAyYf,IAAIA,UAAJ,CACE,oBADF,EAEE,WAFF,EAGE,MAHF,EAIE,WAJF,EAKE,EALF,CAzYe,EAgZf,IAAIA,UAAJ,CACE,oBADF,EAEE,kBAFF,EAGE,0BAHF,EAIE,kBAJF,EAKE,EALF,CAhZe,EAuZf,IAAIA,UAAJ,CACE,oBADF,EAEE,oBAFF,EAGE,oBAHF,EAIE,oBAJF,EAKE,EALF,CAvZe,EA8Zf,IAAIA,UAAJ,CACE,oBADF,EAEE,OAFF,EAGE,eAHF,EAIE,OAJF,EAKE,EALF,CA9Ze,EAqaf,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,cAHF,EAIE,gBAJF,EAKE,EALF,CArae,EA4af,IAAIA,UAAJ,CACE,oBADF,EAEE,QAFF,EAGE,QAHF,EAIE,yBAJF,EAKE,EALF,CA5ae,EAmbf,IAAIA,UAAJ,CACE,oBADF,EAEE,SAFF,EAGE,sBAHF,EAIE,eAJF,EAKE,EALF,CAnbe,CAAjB,CADO,CA6bP;;AACA,QAAI,KAAKI,KAAL,CAAWI,WAAX,CAAuB8C,MAA3B,EACE,oBACE,uDACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKnB,iBAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAHF,eAcE,oBAAC,MAAD;AACE,MAAA,MAAM,EAAEkB,UADV;AAEE,MAAA,aAAa,EAAE,MAAM,KAAKP,aAAL,EAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eAkBE,oBAAC,OAAD;AACE,MAAA,aAAa,EAAE,KAAK1C,KAAL,CAAWE,aAD5B;AAEE,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWM,SAFxB;AAGE,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,cAHzB;AAIE,MAAA,iBAAiB,EAAE,CAACqC,KAAD,EAAgBC,IAAhB,KACjB,KAAKF,iBAAL,CAAuBC,KAAvB,EAA8BC,IAA9B,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,eA0BE,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,KAAK7C,KAAL,CAAWO,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,eA2BE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,aAAxB;AAAuC,MAAA,MAAM,EAAE+C,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,CADF,CADF,CADF,CAkCA;AAlCA,SAmCK,oBAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,MAAM,KAAKvB,KAAL,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACN;;AApnBsD","sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport animateScrollTo from \"animated-scroll-to\";\n\nimport Main from \"./components/Main\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport Sidebar from \"./components/Sidebar\";\nimport OverlayShadow from \"./components/OverlayShadow\";\n\nimport MusicVideo from \"./util/MusicVideo\";\nimport URLParser from \"./util/URLParser\";\nimport Playlist from \"./util/Playlist\";\n\nimport \"./stylesheets/Fonts.css\";\nimport \"./stylesheets/App.css\";\n\nconst domain = \"http://localhost:9000\";\n\ntype AppState = {\n  displayName: string;\n  currentScreen: string;\n  loggedIn: boolean;\n  accessToken: string;\n  recentlyPlayed: Object[];\n  playlists: { [id: string]: Playlist };\n  sidebarShowing: boolean;\n};\n\nexport default class App extends Component<{}, AppState> {\n  state: AppState = {\n    displayName: \"\",\n    currentScreen: \"Home\",\n    loggedIn: false,\n    accessToken: \"\",\n    recentlyPlayed: [],\n    playlists: {},\n    sidebarShowing: false,\n  };\n\n  componentDidMount() {\n    /**\n     * ----------------------------------------------Authorization Flow----------------------------------------------\n     */\n    const cookies = new Cookies();\n    // if we were redirected from /callback (obtained an accessToken)\n    if (cookies.get(\"spotifyMTVAccessToken\") !== undefined) {\n      this.setState({\n        accessToken: cookies.get(\"spotifyMTVAccessToken\"),\n      });\n      const url =\n        \"http://localhost:9000/mtvApi/getDisplayName?accessToken=\" +\n        cookies.get(\"spotifyMTVAccessToken\");\n\n      fetch(url)\n        .then((res) => res.text())\n        .then((res) => this.setState({ displayName: res }));\n      // remove it from the cookies (later will hash cookie name instead of deleting it so other sites can't retrieve it)\n      cookies.remove(\"spotifyMTVAccessToken\");\n    } else {\n      // obtain the authorization code from the URL (after calling /login)\n      const url = window.location.href;\n      const authCode = URLParser(url, \"code=\");\n\n      if (authCode !== \"\") {\n        const url = domain + \"/mtvApi/callback?code=\" + authCode;\n        fetch(url)\n          .then((authInfo) => authInfo.json())\n          .then((authInfo) => {\n            cookies.set(\"spotifyMTVAccessToken\", authInfo.accessToken);\n            window.location.href = \"/\"; // this will reload the page again\n          });\n      }\n    }\n    /**\n     * ---------------------------------------------------------------------------------------------------------------\n     */\n  }\n\n  /**\n   * Calls the login endpoint to obtain an authorization URL (which will return an auth code).\n   */\n  login() {\n    const url = domain + \"/mtvApi/login\";\n    fetch(url)\n      .then((authURL) => authURL.text())\n      .then((authURL) => (window.location.href = authURL));\n  }\n\n  /**\n   * Gets the user's Spotify display name.\n   */\n  getDisplayName() {\n    const url =\n      domain + \"/mtvApi/getDisplayName?accessToken=\" + this.state.accessToken;\n    fetch(url)\n      .then((res) => res.text())\n      .then((res) => this.setState({ displayName: res }));\n  }\n\n  /**\n   * Gets an array of music videos for the user's recently played tracks on Spotify.\n   */\n  getRecentlyPlayed() {\n    const url =\n      domain +\n      \"/mtvApi/getRecentlyPlayed?accessToken=\" +\n      this.state.accessToken;\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => this.setState({ recentlyPlayed: res }));\n  }\n\n  /**\n   * Gets a dictionary of ```[id]: Playlist``` for each of the user's public playlists on Spotify.\n   */\n  getPlaylists() {\n    const url =\n      domain + \"/mtvApi/getPlaylists?accessToken=\" + this.state.accessToken;\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => this.setState({ playlists: res }));\n  }\n\n  /**\n   * Gets all of the music videos and updates state for playlist with ```id```.\n   */\n  getPlaylistVideos(id: string) {\n    const url = domain + \"/mtvApi/getPlaylistVideos\";\n\n    var playlists: { [id: string]: Playlist } = {};\n    Object.assign(playlists, this.state.playlists);\n    var tracks = playlists[id].tracks;\n\n    const body = {\n      tracks: tracks,\n    };\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // update the playlist's music videos in state\n        playlists[id].musicVideos = res;\n        this.setState({\n          playlists: playlists,\n        });\n      });\n  }\n\n  /**\n   * Handles showing/hiding the sidebar.\n   */\n  toggleSidebar() {\n    this.setState({ sidebarShowing: !this.state.sidebarShowing });\n  }\n\n  /**\n   * Handles selecting a sidebar item.\n   */\n  selectSidebarItem(title: string, type: string) {\n    this.setState({ currentScreen: title });\n    setTimeout(() => {\n      this.setState({ sidebarShowing: false });\n      animateScrollTo([0, 0], {\n        maxDuration: 400,\n      });\n    }, 150);\n  }\n\n  render() {\n    var testVideos = [\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Futsal Shuffle\",\n        \"Lil Uzi Vert\",\n        \"Eternal Atake\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"no-photos.img\",\n        \"No Photos\",\n        \"Don Toliver\",\n        \"Heaven or Hell\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"RENT FREE\",\n        \"Russ\",\n        \"RENT FREE\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"QUARANTINE CLEAN\",\n        \"Turbo, Gunna, Young Thug\",\n        \"QUARANTINE CLEAN\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Bored In The House\",\n        \"Tyga, Curtis Roach\",\n        \"Bored In The House\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"@ MEH\",\n        \"Playboi Carti\",\n        \"@ MEH\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"ALASKA\",\n        \"BROCKHAMPTON\",\n        \"SATURATION III\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Jersey\",\n        \"Future\",\n        \"What A Time To Be Alive\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"All Bad\",\n        \"Future, Lil Uzi Vert\",\n        \"High Off Life\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Futsal Shuffle\",\n        \"Lil Uzi Vert\",\n        \"Eternal Atake\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"no-photos.img\",\n        \"No Photos\",\n        \"Don Toliver\",\n        \"Heaven or Hell\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"RENT FREE\",\n        \"Russ\",\n        \"RENT FREE\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"QUARANTINE CLEAN\",\n        \"Turbo, Gunna, Young Thug\",\n        \"QUARANTINE CLEAN\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Bored In The House\",\n        \"Tyga, Curtis Roach\",\n        \"Bored In The House\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"@ MEH\",\n        \"Playboi Carti\",\n        \"@ MEH\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"ALASKA\",\n        \"BROCKHAMPTON\",\n        \"SATURATION III\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Jersey\",\n        \"Future\",\n        \"What A Time To Be Alive\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"All Bad\",\n        \"Future, Lil Uzi Vert\",\n        \"High Off Life\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Futsal Shuffle\",\n        \"Lil Uzi Vert\",\n        \"Eternal Atake\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"no-photos.img\",\n        \"No Photos\",\n        \"Don Toliver\",\n        \"Heaven or Hell\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"RENT FREE\",\n        \"Russ\",\n        \"RENT FREE\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"QUARANTINE CLEAN\",\n        \"Turbo, Gunna, Young Thug\",\n        \"QUARANTINE CLEAN\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Bored In The House\",\n        \"Tyga, Curtis Roach\",\n        \"Bored In The House\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"@ MEH\",\n        \"Playboi Carti\",\n        \"@ MEH\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"ALASKA\",\n        \"BROCKHAMPTON\",\n        \"SATURATION III\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Jersey\",\n        \"Future\",\n        \"What A Time To Be Alive\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"All Bad\",\n        \"Future, Lil Uzi Vert\",\n        \"High Off Life\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Futsal Shuffle\",\n        \"Lil Uzi Vert\",\n        \"Eternal Atake\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"no-photos.img\",\n        \"No Photos\",\n        \"Don Toliver\",\n        \"Heaven or Hell\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"RENT FREE\",\n        \"Russ\",\n        \"RENT FREE\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"QUARANTINE CLEAN\",\n        \"Turbo, Gunna, Young Thug\",\n        \"QUARANTINE CLEAN\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Bored In The House\",\n        \"Tyga, Curtis Roach\",\n        \"Bored In The House\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"@ MEH\",\n        \"Playboi Carti\",\n        \"@ MEH\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"ALASKA\",\n        \"BROCKHAMPTON\",\n        \"SATURATION III\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Jersey\",\n        \"Future\",\n        \"What A Time To Be Alive\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"All Bad\",\n        \"Future, Lil Uzi Vert\",\n        \"High Off Life\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Futsal Shuffle\",\n        \"Lil Uzi Vert\",\n        \"Eternal Atake\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"no-photos.img\",\n        \"No Photos\",\n        \"Don Toliver\",\n        \"Heaven or Hell\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"RENT FREE\",\n        \"Russ\",\n        \"RENT FREE\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"QUARANTINE CLEAN\",\n        \"Turbo, Gunna, Young Thug\",\n        \"QUARANTINE CLEAN\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Bored In The House\",\n        \"Tyga, Curtis Roach\",\n        \"Bored In The House\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"@ MEH\",\n        \"Playboi Carti\",\n        \"@ MEH\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"ALASKA\",\n        \"BROCKHAMPTON\",\n        \"SATURATION III\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Jersey\",\n        \"Future\",\n        \"What A Time To Be Alive\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"All Bad\",\n        \"Future, Lil Uzi Vert\",\n        \"High Off Life\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Futsal Shuffle\",\n        \"Lil Uzi Vert\",\n        \"Eternal Atake\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"no-photos.img\",\n        \"No Photos\",\n        \"Don Toliver\",\n        \"Heaven or Hell\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"RENT FREE\",\n        \"Russ\",\n        \"RENT FREE\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"QUARANTINE CLEAN\",\n        \"Turbo, Gunna, Young Thug\",\n        \"QUARANTINE CLEAN\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Bored In The House\",\n        \"Tyga, Curtis Roach\",\n        \"Bored In The House\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"@ MEH\",\n        \"Playboi Carti\",\n        \"@ MEH\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"ALASKA\",\n        \"BROCKHAMPTON\",\n        \"SATURATION III\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Jersey\",\n        \"Future\",\n        \"What A Time To Be Alive\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"All Bad\",\n        \"Future, Lil Uzi Vert\",\n        \"High Off Life\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Futsal Shuffle\",\n        \"Lil Uzi Vert\",\n        \"Eternal Atake\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"no-photos.img\",\n        \"No Photos\",\n        \"Don Toliver\",\n        \"Heaven or Hell\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"RENT FREE\",\n        \"Russ\",\n        \"RENT FREE\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"QUARANTINE CLEAN\",\n        \"Turbo, Gunna, Young Thug\",\n        \"QUARANTINE CLEAN\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Bored In The House\",\n        \"Tyga, Curtis Roach\",\n        \"Bored In The House\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"@ MEH\",\n        \"Playboi Carti\",\n        \"@ MEH\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"ALASKA\",\n        \"BROCKHAMPTON\",\n        \"SATURATION III\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"Jersey\",\n        \"Future\",\n        \"What A Time To Be Alive\",\n        \"\"\n      ),\n      new MusicVideo(\n        \"futsal-shuffle.img\",\n        \"All Bad\",\n        \"Future, Lil Uzi Vert\",\n        \"High Off Life\",\n        \"\"\n      ),\n    ];\n\n    // user has logged in, show the app\n    if (this.state.accessToken.length)\n      return (\n        <>\n          <div className=\"container-fluid p-0\">\n            {/*----------------------------------------------------test buttons--------------------------------------------------*/}\n\n            <div id=\"test-buttons\" className=\"text-center m-5\">\n              <button\n                className=\"btn spotify-button-green\"\n                onClick={() => this.getPlaylistVideos()}\n              >\n                GET TOP ARTISTS\n              </button>\n            </div>\n\n            {/*-------------------------------------------------------------------------------------------------------------------*/}\n\n            <Navbar\n              videos={testVideos}\n              toggleSidebar={() => this.toggleSidebar()}\n            />\n            <Sidebar\n              currentScreen={this.state.currentScreen}\n              playlists={this.state.playlists}\n              displaying={this.state.sidebarShowing}\n              selectSidebarItem={(title: string, type: string) =>\n                this.selectSidebarItem(title, type)\n              }\n            />\n            <OverlayShadow displaying={this.state.sidebarShowing} />\n            <Main title={this.state.currentScreen} videos={testVideos} />\n          </div>\n        </>\n      );\n    // show the login screen\n    else return <Login login={() => this.login()} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}